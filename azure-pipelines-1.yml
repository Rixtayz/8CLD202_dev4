# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool: "default"

variables:
- name: ContainerRegistryName
  value: 'GuroRegistry'
- name: DockerRegistryServiceConnectionName
  value: 'Docker Registry Dynamic'
- name: AzureSubscription
  value: 'Azure subscription 1(970fcef5-9c23-4f7d-a11b-5a96d104f066)'

steps:
  - task: AzureKeyVault@2
    displayName: 'Reading Secrets'
    inputs:
      azureSubscription: $(AzureSubscription)
      KeyVaultName: 'GuroKeyVault'
      SecretsFilter: 'ApplicationId,TenantId,ClientSecret'
      RunAsPreJob: false

  - task: Docker@2
    displayName: 'Packaging API'
    inputs:
      containerRegistry: $(DockerRegistryServiceConnectionName)
      repository: 'API'
      command: 'buildAndPush'
      Dockerfile: './API/Dockerfile'
      buildContext: '$(Build.SourcesDirectory)'
      tags: |
        $(Build.BuildId)
        latest

  - task: Docker@2
    displayName: 'Packaging MVC'
    inputs:
      containerRegistry: $(DockerRegistryServiceConnectionName)
      repository: 'MVC'
      command: 'buildAndPush'
      Dockerfile: './MVC/Dockerfile'
      buildContext: '$(Build.SourcesDirectory)'
      tags: |
        $(Build.BuildId)
        latest

  - task: Docker@2
    displayName: 'Packaging Worker_Content'
    inputs:
      containerRegistry: $(DockerRegistryServiceConnectionName)
      repository: 'Worker_Content'
      command: 'buildAndPush'
      Dockerfile: './Worker_Content/Dockerfile'
      buildContext: '$(Build.SourcesDirectory)'
      tags: |
        $(Build.BuildId)
        latest

  - task: Docker@2
    displayName: 'Packaging Worker_DB'
    inputs:
      containerRegistry: $(DockerRegistryServiceConnectionName)
      repository: 'Worker_DB'
      command: 'buildAndPush'
      Dockerfile: './Worker_DB/Dockerfile'
      buildContext: '$(Build.SourcesDirectory)'
      tags: |
        $(Build.BuildId)
        latest

  - task: Docker@2
    displayName: 'Packaging Worker_Image'
    inputs:
      containerRegistry: $(DockerRegistryServiceConnectionName)
      repository: 'Worker_Image'
      command: 'buildAndPush'
      Dockerfile: './Worker_Image/Dockerfile'
      buildContext: '$(Build.SourcesDirectory)'
      tags: |
        $(Build.BuildId)
        latest